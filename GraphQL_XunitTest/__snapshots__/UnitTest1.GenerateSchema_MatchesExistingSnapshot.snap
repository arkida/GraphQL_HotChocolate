schema {
  query: Query
}

type Query {
  swapiPeople: SwapiPeople!
  swapiPerson(id: Int!): SwapiPerson!
}

type SwapiPeople {
  origin: String!
  count: Int!
  next: String!
  previous: String!
  results: [SwapiPerson!]
  isSuccessful: Boolean!
  code: String!
  message: String!
}

type SwapiPerson {
  id: Int!
  name: String!
  height: String!
  mass: String!
  hairColor: String!
  skinColor: String!
  eyeColor: String!
  birthYear: String!
  gender: String!
  homeworId: String!
  films: [String!]
  species: [String!]
  vehicles: [String!]
  starships: [String!]
  created: String!
  edited: String!
  url: String!
  isSuccessful: Boolean!
  code: String!
  message: String!
}

"The `@defer` directive may be provided for fragment spreads and inline fragments to inform the executor to delay the execution of the current fragment to indicate deprioritization of the current fragment. A query with `@defer` directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred is delivered in a subsequent response. `@include` and `@skip` take precedence over `@defer`."
directive @defer("If this argument label has a value other than null, it will be passed on to the result of this defer directive. This label is intended to give client applications a way to identify to which fragment a deferred result belongs to." label: String "Deferred when true." if: Boolean) on FRAGMENT_SPREAD | INLINE_FRAGMENT

"The `@stream` directive may be provided for a field of `List` type so that the backend can leverage technology such as asynchronous iterators to provide a partial list in the initial response, and additional list items in subsequent responses. `@include` and `@skip` take precedence over `@stream`."
directive @stream("If this argument label has a value other than null, it will be passed on to the result of this stream directive. This label is intended to give client applications a way to identify to which fragment a streamed result belongs to." label: String "The initial elements that shall be send down to the consumer." initialCount: Int! = 0 "Streamed when true." if: Boolean) on FIELD
